import 'package:flutter/material.dart';

class ElevatedButtonWithStadiumBorder extends ElevatedButton {
  ElevatedButtonWithStadiumBorder({
    Key? key,
    required Widget child,
    required void Function()? onPressed,
    void Function()? onLongPress,
    void Function(bool)? onHover,
    void Function(bool)? onFocusChange,
    FocusNode? focusNode,
    bool autofocus = false,
    Clip clipBehavior = Clip.none,
    OutlinedBorder? styleShape,
    Color? styleBackgroundColor,
    TextStyle? textStyle,
    Color? foregroundColor,
    Color? overlayColor,
    Color? shadowColor,
    double? elevation,
    EdgeInsetsGeometry? padding,
    Size? minimumSize,
    Size? fixedSize,
    Size? maximumSize,
    BorderSide? side,
    MouseCursor? mouseCursor,
    VisualDensity? visualDensity,
    MaterialTapTargetSize? tapTargetSize,
    Duration? animationDuration,
    bool? enableFeedback,
    AlignmentGeometry? alignment,
    InteractiveInkFeatureFactory? splashFactory,
  }) : super(
          key: key,
          child: child,
          onPressed: onPressed,
          onFocusChange: onFocusChange,
          onLongPress: onLongPress,
          autofocus: autofocus,
          clipBehavior: clipBehavior,
          focusNode: focusNode,
          onHover: onHover,
          style: ButtonStyle(
            textStyle: MaterialStateProperty.all<TextStyle?>(textStyle),
            alignment: alignment,
            animationDuration: animationDuration,
            elevation: MaterialStateProperty.all<double?>(elevation),
            enableFeedback: enableFeedback,
            fixedSize: MaterialStateProperty.all<Size?>(fixedSize),
            foregroundColor: MaterialStateProperty.all<Color?>(foregroundColor),
            maximumSize: MaterialStateProperty.all<Size?>(maximumSize),
            minimumSize: MaterialStateProperty.all<Size?>(minimumSize),
            mouseCursor: MaterialStateProperty.all<MouseCursor?>(mouseCursor),
            overlayColor: MaterialStateProperty.all<Color?>(overlayColor),
            padding: MaterialStateProperty.all<EdgeInsetsGeometry?>(padding),
            shadowColor: MaterialStateProperty.all<Color?>(shadowColor),
            side: MaterialStateProperty.all<BorderSide?>(side),
            splashFactory: splashFactory,
            tapTargetSize: tapTargetSize,
            visualDensity: visualDensity,
            backgroundColor: MaterialStateProperty.all<Color>(
                styleBackgroundColor ?? Colors.blue),
            shape: MaterialStateProperty.all<OutlinedBorder>(
              styleShape ?? const StadiumBorder(),
            ),
          ),
        );
}
